
// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∑–Ω–∞–∫–∞ –∑–æ–¥–∏–∞–∫–∞
function getZodiacSign(day, month) {
    const signs = [
        { name: "–ö–æ–∑–µ—Ä–æ–≥", start: [12, 22], end: [1, 19], description: "–í—ã –∞–º–±–∏—Ü–∏–æ–∑–Ω—ã –∏ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–∏—Ä–æ–≤–∞–Ω—ã!" },
        { name: "–í–æ–¥–æ–ª–µ–π", start: [1, 20], end: [2, 18], description: "–í—ã –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã –∏ –≥—É–º–∞–Ω–∏—Ç–∞—Ä–Ω—ã!" },
        { name: "–†—ã–±—ã", start: [2, 19], end: [3, 20], description: "–í—ã –∏–Ω—Ç—É–∏—Ç–∏–≤–Ω—ã –∏ —Å–æ—Å—Ç—Ä–∞–¥–∞—Ç–µ–ª—å–Ω—ã!" },
        { name: "–û–≤–µ–Ω", start: [3, 21], end: [4, 19], description: "–í—ã —ç–Ω–µ—Ä–≥–∏—á–Ω—ã –∏ –ø–æ–ª–Ω—ã —ç–Ω—Ç—É–∑–∏–∞–∑–º–∞!" },
        { name: "–¢–µ–ª–µ—Ü", start: [4, 20], end: [5, 20], description: "–í—ã –Ω–∞–¥–µ–∂–Ω—ã –∏ –ø—Ä–∞–∫—Ç–∏—á–Ω—ã!" },
        { name: "–ë–ª–∏–∑–Ω–µ—Ü—ã", start: [5, 21], end: [6, 20], description: "–í—ã –æ–±—â–∏—Ç–µ–ª—å–Ω—ã –∏ –ª—é–±–æ–∑–Ω–∞—Ç–µ–ª—å–Ω—ã!" },
        { name: "–†–∞–∫", start: [6, 21], end: [7, 22], description: "–í—ã –∑–∞–±–æ—Ç–ª–∏–≤—ã –∏ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã!" },
        { name: "–õ–µ–≤", start: [7, 23], end: [8, 22], description: "–í—ã —É–≤–µ—Ä–µ–Ω—ã –≤ —Å–µ–±–µ –∏ —â–µ–¥—Ä—ã!" },
        { name: "–î–µ–≤–∞", start: [8, 23], end: [9, 22], description: "–í—ã –∞–Ω–∞–ª–∏—Ç–∏—á–Ω—ã –∏ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã –∫ –¥–µ—Ç–∞–ª—è–º!" },
        { name: "–í–µ—Å—ã", start: [9, 23], end: [10, 22], description: "–í—ã –¥–∏–ø–ª–æ–º–∞—Ç–∏—á–Ω—ã –∏ —Å—Ç—Ä–µ–º–∏—Ç–µ—Å—å –∫ –≥–∞—Ä–º–æ–Ω–∏–∏!" },
        { name: "–°–∫–æ—Ä–ø–∏–æ–Ω", start: [10, 23], end: [11, 21], description: "–í—ã —Å—Ç—Ä–∞—Å—Ç–Ω—ã –∏ —Ä–µ—à–∏—Ç–µ–ª—å–Ω—ã!" },
        { name: "–°—Ç—Ä–µ–ª–µ—Ü", start: [11, 22], end: [12, 21], description: "–í—ã –∞–≤–∞–Ω—Ç—é—Ä–Ω—ã –∏ —Ñ–∏–ª–æ—Å–æ—Ñ—Å–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã!" }
    ];

    for (let sign of signs) {
        const [startMonth, startDay] = sign.start;
        const [endMonth, endDay] = sign.end;
        
        if ((month === startMonth && day >= startDay) || 
            (month === endMonth && day <= endDay) ||
            (startMonth > endMonth && ((month === startMonth && day >= startDay) || (month === endMonth && day <= endDay)))) {
            return sign;
        }
    }
    return { name: "–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω", description: "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–≤–µ–¥–µ–Ω–Ω—É—é –¥–∞—Ç—É" };
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
function showResult(sign) {
    document.getElementById('zodiacSign').textContent = sign.name;
    document.getElementById('zodiacDescription').textContent = sign.description;
    document.getElementById('result').style.display = 'flex';
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –Ω–∞–∑–∞–¥
function goBack() {
    document.getElementById('result').style.display = 'none';
    document.getElementById('loader').style.display = 'none';
    document.querySelector('.content').style.display = 'block';
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–æ—Ä–º—ã
document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('birthdayForm');
    const loader = document.getElementById('loader');
    const content = document.querySelector('.content');

    form.addEventListener('submit', function(e) {
        e.preventDefault();
        
        const birthdateInput = document.getElementById('birthdateInput');
        if (!birthdateInput.value) {
            alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è');
            return;
        }

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
        content.style.display = 'none';
        loader.style.display = 'flex';

        // –ò–º–∏—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –º–æ–∂–µ—Ç –±—ã—Ç—å –∑–∞–ø—Ä–æ—Å –∫ API)
        setTimeout(() => {
            const birthDate = new Date(birthdateInput.value);
            const day = birthDate.getDate();
            const month = birthDate.getMonth() + 1;
            
            const zodiacSign = getZodiacSign(day, month);
            
            // –°–∫—Ä—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            loader.style.display = 'none';
            showResult(zodiacSign);
        }, 2000);
    });

    // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –¥–∞—Ç–æ–π —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –¥–µ–Ω—å
    const today = new Date().toISOString().split('T')[0];
    document.getElementById('birthdateInput').max = today;
    
    console.log('–°—Ç—Ä–∞–Ω–∏—Ü–∞ –≥–æ—Ä–æ—Å–∫–æ–ø–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞');
});

// –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ Telegram (–æ—Å—Ç–∞–≤—å—Ç–µ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
if (!window.Telegram) {
    console.log('üîß –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ Telegram...');
    window.Telegram = {
        WebApp: {
            initData: 'user=%7B%22id%22%3A123456789%2C%22first_name%22%3A%22%D0%98%D0%B2%D0%B0%D0%BD%22%2C%22last_name%22%3A%22%D0%9F%D0%B5%D1%82%D1%80%D0%BE%D0%B2%22%2C%22username%22%3A%22ivan_petrov%22%2C%22language_code%22%3A%22ru%22%7D',
            initDataUnsafe: {
                user: {
                    id: 123456789,
                    first_name: '–ò–≤–∞–Ω',
                    last_name: '–ü–µ—Ç—Ä–æ–≤', 
                    username: 'ivan_petrov',
                    language_code: 'ru'
                }
            },
            version: '6.0',
            platform: 'tdesktop'
        }
    };
}