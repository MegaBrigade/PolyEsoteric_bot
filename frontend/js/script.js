const button = document.getElementById("buttonG");
const response = document.getElementById("title");

// === –¢–ï–°–¢–û–í–´–ï –î–ê–ù–ù–´–ï ===
if (!window.Telegram) {
    console.log('üîß –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ Telegram...');
    window.Telegram = {
        WebApp: {
            initData: 'user=%7B%22id%22%3A123456789%2C%22first_name%22%3A%22%D0%98%D0%B2%D0%B0%D0%BD%22%2C%22last_name%22%3A%22%D0%9F%D0%B5%D1%82%D1%80%D0%BE%D0%B2%22%2C%22username%22%3A%22ivan_petrov%22%2C%22language_code%22%3A%22ru%22%7D',
            initDataUnsafe: {
                user: {
                    id: 123456789,
                    first_name: '–ò–≤–∞–Ω',
                    last_name: '–ü–µ—Ç—Ä–æ–≤', 
                    username: 'ivan_petrov',
                    language_code: 'ru'
                }
            },
            version: '6.0',
            platform: 'tdesktop'
        }
    };
}
// === –ö–û–ù–ï–¶ –¢–ï–°–¢–û–í–´–• –î–ê–ù–ù–´–• ===

function getTelegramUserInfo() {
    try {
        if (window.Telegram && Telegram.WebApp) {
            const initData = Telegram.WebApp.initData;
            const initDataUnsafe = Telegram.WebApp.initDataUnsafe;
            
            console.log('InitData:', initData);
            console.log('InitDataUnsafe:', initDataUnsafe);
            
            if (initDataUnsafe && initDataUnsafe.user) {
                const user = initDataUnsafe.user;
                return {
                    username: user.username,
                    firstName: user.first_name,
                    lastName: user.last_name,
                    userId: user.id,
                    exists: true
                };
            }
            
            if (initData) {
                const params = new URLSearchParams(initData);
                const userParam = params.get('user');
                if (userParam) {
                    const user = JSON.parse(decodeURIComponent(userParam));
                    return {
                        username: user.username,
                        firstName: user.first_name,
                        lastName: user.last_name,
                        userId: user.id,
                        exists: true
                    };
                }
            }
        }
    } catch (error) {
        console.error('Error getting Telegram user info:', error);
    }
    
    return { exists: false };
}

function updateDate() {
    const dateElement = document.querySelector('.date p');
    const now = new Date();
    const months = [
        '–Ø–Ω–≤–∞—Ä—å', '–§–µ–≤—Ä–∞–ª—å', '–ú–∞—Ä—Ç', '–ê–ø—Ä–µ–ª—å', '–ú–∞–π', '–ò—é–Ω—å',
        '–ò—é–ª—å', '–ê–≤–≥—É—Å—Ç', '–°–µ–Ω—Ç—è–±—Ä—å', '–û–∫—Ç—è–±—Ä—å', '–ù–æ—è–±—Ä—å', '–î–µ–∫–∞–±—Ä—å'
    ];
    
    const month = months[now.getMonth()];
    const day = now.getDate();
    dateElement.textContent = `${month}, ${day}`;
}

function createPersonalizedGreeting() {
    const userInfo = getTelegramUserInfo();
    
    if (userInfo.exists) {
        const userName = userInfo.username 
            ? `@${userInfo.username}` 
            : userInfo.firstName || '—Å—Ç—Ä–∞–Ω–Ω–∏–∫';
        
        const greetings = [
            `–£—Å–ª—ã—à—å –∑–æ–≤ —Å—É–¥—å–±—ã, ${userName}`,
            `${userName}, —Å—É–¥—å–±–∞ –≥–æ—Ç–æ–≤–∏—Ç —Ç–µ–±–µ –Ω–µ–±–æ–ª—å—à–æ–π –ø–æ–¥–∞—Ä–æ–∫!`,
            `–ü—Ä–∏–≤–µ—Ç, ${userName}! –õ—É–Ω–∞ —Å–µ–≥–æ–¥–Ω—è –∫—Ä–∞—Å–∏–≤–∞—è, –ø—Ä–∞–≤–¥–∞?`,
            `${userName}, –¥–∞–≤–∞–π —É–∑–Ω–∞–µ–º —Ç–≤–æ–µ –±—É–¥—É—â–µ–µ!`,
            `–°—É–¥—å–±–∞ —à–µ–ø—á–µ—Ç —Ç–µ–±–µ, ${userName}...`
        ];
        
        return greetings[Math.floor(Math.random() * greetings.length)];
    }
    
    return '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, –æ —Å—Ç—Ä–∞–Ω–Ω–∏–∫!';
}

function initializeApp() {
    updateDate();
    
    const userInfo = getTelegramUserInfo();
    console.log('Telegram User Info:', userInfo);
    
    const titleElement = document.getElementById('title');
    titleElement.textContent = createPersonalizedGreeting();
    
    const isInTelegram = !!(window.Telegram && Telegram.WebApp);
    console.log('–ó–∞–ø—É—â–µ–Ω–æ –≤ Telegram Web App:', isInTelegram);
    
    if (isInTelegram) {
        console.log('–í–µ—Ä—Å–∏—è Telegram Web App:', Telegram.WebApp.version);
        console.log('–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞:', Telegram.WebApp.platform);
    }
}


document.addEventListener('DOMContentLoaded', initializeApp);

button.addEventListener('click', async () => {
    response.textContent = '–ü–æ—Å—ã–ª–∞—é –∑–∞–ø—Ä–æ—Å –≤–æ –≤—Å–µ–ª–µ–Ω–Ω—É—é...';
    window.location.href = 'horoscope.html';
    try {
        const userInfo = getTelegramUserInfo();
        
        const res = await fetch('/api/test', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ 
                message: '–•–æ—á—É —É–∑–Ω–∞—Ç—å —Å–≤–æ–π –≥–æ—Ä–æ—Å–∫–æ–ø', 
                user_info: userInfo,
                timestamp: new Date().toISOString()
            })
        });

        const data = await res.json();
        response.textContent = `${data.reply}`;
    } catch (err) {
        console.error(err);
        response.textContent = '–¢–≤–æ–µ –±—É–¥—É—â–µ–µ —Ç—É–º–∞–Ω–Ω–æ...';
    }
});